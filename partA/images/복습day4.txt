복습 QnA

1. 메소드 정의 - 왜 만드는 것일까요?(다른 프로그래밍언어에서 '함수'와 같은 동작을 합니다.)
                자주 사용되는 기능을 main에서 분리시킨다.
                코드를 여러 번 작성하지 않고 재사용

2. 메소드의 인자, 매개변수란 무엇인가요?  메소드의 실행에 필요한 입력값
            인자 argument : 둘 사이에 값을 연결시킨다. 
                            메소드 호출시 입력값을 메소드 정의한 실행 부분으로 연결시켜준다.
            매개변수 : 선언된 변수. () 안에서 선언된 변수 그 자체를 말합니다.
            결론은 인자와 매개변수는 같은 의미

3. 메소드의 리턴은 무엇인가요? 메소드 실행한 결과값.

4.static 메소드의 특징은 무엇인가요?
        답: 객체를 생성하지 않고 클래스 이름으로 직접 실행(호출)
        예시 : Character.inUpperCase(c)  String.format("%d", val)   Integer.valueOf
    (비교) 인스턴스 메소드는 객체를 만들어서 메소드를 호출
    (인스턴스 메소드 예시) message.length(), sc.nextInt(),
    **정리 : 메소드는 인스턴스 메소드와 static 메소드로 분류할 수 있습니다.
 
 
 
 
 * vs code 단축키 : 
 *       저장 : Ctrl+s , 실행 : F5 , 입력 취소 : Ctrl+z
 *       한줄 복사 : Alt+Shift+위/아래방향키 , 한줄 삭제 :Ctrl+ShiftK+ 
 *       줄바꿈 : Ctrl + Enter , 같은 단어에 대한 다중 커서 : Ctrl+ Shift +L 
 *       변수명 변경 : F2  (파일명,폴더명 등등 모든 이름 변경 F2 와 동일)
 *       자동 완성 : Ctrl+스페이스바 , 라인 이동 : Alt + 위/아래방향키
 *       오류 수정 가이드 보기 : ctrl+ .
 *       왼쪽 액티브바 보이기/숨기기 ctrl + b
 *       한줄씩 실행하며 디버깅하기 : 중단점은 첫번쨰 명령어. -> f5 로 시작 -> 계속 f10으로  한라인씩 확인하기


    //리턴값 형식을 기준으로 정리하기
    //boolean : isEmpty, isBlank, startsWith, endsWith, equals
    //String : toUpperCase, toLowerCase, concat, substring, replace
    //int : length, indexOf
    //char : charAt

    // 24-01-02 복습
    // * 입력 -> 처리 => 출력 의 과정을 항상 생각하자.
    // * 문자열 메소드에도 입력,출력을 생각해 볼수 있습니다. 입력은 메소드의 인자, 출력은 메소드의 리턴
    //      단,  message.charAt(1) 를 예시로 하면 message는 메소드의 실행 주체(주인).
    //  그리고, 리턴이 없는 메소드가 있을 수 있으면 그 떄는 void 로 표현됩니다.

    객체란 ? 여러 종류의 데이터가 모여있는 데이터 덩어리.(기본형은 데이터 저장의 최소단위)
 * 객체는 참조형 변수를 사용합니다.(변수가 주소를 저장한다.)
 * 객체를 메모리에 저장 ----> 초기에 저장한 데이터를 바꿀 수 있다.(배열) - 가변객체
 *                    ----> 초기에 저정한 데이터를 바꿀 수 없다.(String) - 불변객체