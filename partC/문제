1. 파일장치로 데이터를 저장하는 것은 입력스트림을 사용한다.( O X ) 답: x
설명 :         ㄴ출력 

2. 데이터 전송 단위에 따라 바이트기반과 문자기반으로 분류된다. ( O X ) 답 : O


3. 1) FileReader 클래스의 부모 클래스는 Reader 클래스이다. ( O X )    답 : O
               설명 : 문자기반 입출력 부모(상위) 클래스는 모두 Reader 클래스 

   2) FileReader 클래스는 문자기반으로 InputStream 의 자식 클래스이다. ( O X ) 답: x
               설명 : InputStream 은 바이트기반 클래스의 상위클래스

   3) BufferWriter 클래스는 단독으로 사용되는 출력스트림으로 라인단위 처리가 가능하다. ( O X ) 답: x
                  설명 : 보조스트림으로 기본 입출력스트림과 같이 사용 


결론 : InputStream 또는 OutputStream 으로 끝나는 이름의 클래스 바이트 기반
       Reader 또는 Writer 로 끝나는 이름의 클래스는 문자 기반


4. 바이트 기반의 입출력스트림 사용시 처리 속도 향상을 위해 사용할 수 있는 방법은? (2가지)
   정답:
   1) byte 배열로 일정크기의 바이트 다누이로 입출력
   2) 보조스트림 BufferedInputStream 또는 BufferedOutputStream 사용


5. 입출력스트림의 메소드 대부분이 처리가 필요한 예외는? 
   답 : IOException

6. 예외처리를 강요하는 것은 언체크드 익셉션이다. ( O X ) 답: x
   설명 : 강요하는 것은 체크드 익셉션. IOException
   (참고) 언체크드 익셉션. 실행 중에 발생하는 RuntimeException 의 하위클래스들입니다.     

7. 예외처리를 직접 하지 않고 호출한 메소드로 위임하는 키워드는? 
   설명: 직접 처리는 try ~ catch 구문 사용. 정답: throws 예외이름1,예외이름2...

8. 개발자는 throw 명령으로 조건이 만족되지 않은 경우 예외를 발생시킬 수 있다. ( O X )  답 : O
   설명 : JavaWordList.java 적용 , ReviewProb.java 에서 테스트

9. 입출력스트림으로 사용된 객체는 반드시 자원해제를 해야한다. ( O X )  답 : O
   참고 : 자동으로 자원해제되는 try 구분 형식에는 명시적인 close() 안 썼습니다.
         7번과 9번제 테스트를 D11FileWriteThrows.java에서 확인

10. System.in 표준입력만 사용하여 최대 20바이트의 문자열을 입력받을 수 있는 코드를 작성해보세요.
    입력받은 내용은 출력으로 확인도 합니다. 총 라인수 3~4 줄 (ReviewProb.java)